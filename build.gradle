plugins {
    id 'net.researchgate.release' version '2.8.0'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

apply plugin: 'java'
apply from: 'release.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileTestJava.options.encoding = "UTF-8"

project.ext {
    releaseMode = project.hasProperty("releaseMode")
}

repositories {
    jcenter()
    mavenLocal()
    maven { url "http://dl.bintray.com/epam/reportportal" }
    maven { url "https://jitpack.io" }
}

sourceSets {
    main {
        compileClasspath += configurations.shadow
        runtimeClasspath += configurations.shadow
    }
    test {
        compileClasspath += configurations.shadow
        runtimeClasspath += configurations.shadow
    }
}

//configurations.shadow.extendsFrom(configurations.runtime)

shadowJar {
//    configurations = [project.configurations.runtime]

    dependencies {
        include(dependency('com.epam.reportportal:restendpoint'))
        include(dependency('org.apache.httpcomponents:httpclient'))
        include(dependency('org.apache.httpcomponents:httpmime'))
        include(dependency('org.apache.httpcomponents:httpcore'))
        include(dependency('commons-logging:commons-logging'))
        include(dependency('com.google.guava:guava'))

    }
    classifier = null
    relocate 'org.apache.http', 'rp.org.apache.http'
    relocate 'com.google.common', 'rp.com.google.common'
    relocate 'com.google.thirdparty', 'rp.com.google.thirdparty'
    relocate 'org.apache.commons.logging', 'rp.org.apache.commons.logging'
}

dependencies {
    if (releaseMode) {
        compile 'com.epam.reportportal:commons-model:5.0.0'
    } else {
        compile 'com.github.reportportal:commons-model:feec39f3'
    }

    compile 'com.google.guava:guava:26.0-jre'
    compile 'com.epam.reportportal:restendpoint:0.2.14'

    shadow "org.aspectj:aspectjweaver:1.9.2"
    shadow "org.aspectj:aspectjrt:1.9.2"

    shadow 'com.fasterxml.jackson.core:jackson-databind:2.9.9'
    shadow 'com.fasterxml.jackson.core:jackson-annotations:2.9.9'
    shadow 'io.reactivex.rxjava2:rxjava:2.2.10'
    shadow 'org.apache.tika:tika-core:1.4'
    shadow 'org.slf4j:slf4j-api:1.7.25'

    testImplementation ('org.junit.platform:junit-platform-runner:1.6.0') {
        exclude module: 'junit'
    }
    testImplementation 'org.junit.platform:junit-platform-launcher:1.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'


    testImplementation 'com.tngtech.java:junit-dataprovider:1.13.1'

    testImplementation 'org.hamcrest:hamcrest-core:2.2'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
    testImplementation 'org.objenesis:objenesis:2.6'
    testImplementation ('org.awaitility:awaitility:4.0.2') {
        exclude group: 'org.hamcrest'
    }
    testImplementation 'org.apache.commons:commons-io:1.3.2'
}

test{
    useJUnitPlatform()
    testLogging {
        showStandardStreams=true
    }
    systemProperty("file.encoding", "utf-8")
    maxParallelForks(5)
    outputs.upToDateWhen {false}
}

wrapper {
    gradleVersion = '5.4.1'
}
