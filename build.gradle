/*
 *  Copyright 2021 EPAM Systems
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'java-library'

apply from: "${project.scripts_url}/${project.scripts_branch}/build-quality.gradle"
apply from: "${project.scripts_url}/${project.scripts_branch}/release-commons.gradle"
apply from: "${project.scripts_url}/${project.scripts_branch}/signing.gradle"
apply from: "${project.scripts_url}/${project.scripts_branch}/jacoco.gradle"

project.ext.limits = [
        'instruction': 70,
        'branch'     : 53,
        'line'       : 70,
        'complexity' : 60,
        'method'     : 65,
        'class'      : 90
]

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    api ('com.epam.reportportal:commons-model:5.3.3') {
        exclude module: 'jackson-databind'
        exclude module: 'guava'
    }
    api 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1' // Access is needed by HTTP loggers to format JSON
    api 'io.reactivex.rxjava2:rxjava:2.2.10'
    api 'com.google.code.findbugs:jsr305:3.0.2'

    api ("com.squareup.retrofit2:retrofit:${project.retrofit_version}") {
        exclude module: 'okhttp'
    }
    implementation "org.apache.commons:commons-lang3:${project.lang3_version}"
    implementation "com.squareup.okhttp3:okhttp:${project.okhttp_version}"
    implementation "com.squareup.retrofit2:converter-scalars:${project.retrofit_version}"
    implementation ("com.squareup.retrofit2:converter-jackson:${project.retrofit_version}") {
        exclude module: 'jackson-databind'
    }
    implementation ("com.squareup.retrofit2:adapter-rxjava2:${project.retrofit_version}") {
        exclude module: 'rxjava'
    }
    implementation "com.squareup.okhttp3:logging-interceptor:${project.okhttp_version}"
    implementation "org.aspectj:aspectjrt:${project.aspectj_version}"
    implementation "org.aspectj:aspectjweaver:${project.aspectj_version}"

    implementation "org.slf4j:slf4j-api:${slf4j_version}"

    testImplementation "org.slf4j:jul-to-slf4j:${slf4j_version}"
    testImplementation("org.junit.platform:junit-platform-runner:${project.junit_runner_version}") {
        exclude module: 'junit'
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api:${project.junit_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${project.junit_version}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${project.junit_version}"

    testImplementation 'org.hamcrest:hamcrest-core:2.2'
    testImplementation "org.mockito:mockito-core:${project.mockito_version}"
    testImplementation "org.mockito:mockito-junit-jupiter:${project.mockito_version}"
    testImplementation 'ch.qos.logback:logback-classic:1.3.14'
    testImplementation('org.awaitility:awaitility:4.0.2') {
        exclude group: 'org.hamcrest'
    }
    testImplementation 'commons-io:commons-io:2.17.0'
    testImplementation 'com.epam.reportportal:agent-java-test-utils:0.0.6'

}

test {
    useJUnitPlatform()
    systemProperty('file.encoding', 'utf-8')
    forkEvery(1)
    maxParallelForks(5)
    outputs.upToDateWhen { false }
    doFirst {
        def weaver = configurations.runtimeClasspath.find { it.name.contains('aspectjweaver') }
        jvmArgs += "-javaagent:$weaver"
    }
    testLogging {
        events 'failed'
        exceptionFormat 'full'
    }
}

wrapper {
    gradleVersion = '5.4.1'
}

processResources {
    filesMatching('client.properties') {
        expand(project.properties)
    }
}

build.dependsOn jacocoTestReport
